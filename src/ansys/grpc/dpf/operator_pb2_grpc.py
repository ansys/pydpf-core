# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import ansys.grpc.dpf.base_pb2 as base__pb2
import ansys.grpc.dpf.operator_pb2 as operator__pb2


class OperatorServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
                '/ansys.api.dpf.dpf_operator.v0.OperatorService/Create',
                request_serializer=operator__pb2.CreateOperatorRequest.SerializeToString,
                response_deserializer=operator__pb2.Operator.FromString,
                )
        self.Update = channel.unary_unary(
                '/ansys.api.dpf.dpf_operator.v0.OperatorService/Update',
                request_serializer=operator__pb2.UpdateRequest.SerializeToString,
                response_deserializer=base__pb2.Empty.FromString,
                )
        self.UpdateConfig = channel.unary_unary(
                '/ansys.api.dpf.dpf_operator.v0.OperatorService/UpdateConfig',
                request_serializer=operator__pb2.UpdateConfigRequest.SerializeToString,
                response_deserializer=base__pb2.Empty.FromString,
                )
        self.Get = channel.unary_unary(
                '/ansys.api.dpf.dpf_operator.v0.OperatorService/Get',
                request_serializer=operator__pb2.OperatorEvaluationRequest.SerializeToString,
                response_deserializer=operator__pb2.OperatorResponse.FromString,
                )
        self.List = channel.unary_unary(
                '/ansys.api.dpf.dpf_operator.v0.OperatorService/List',
                request_serializer=operator__pb2.Operator.SerializeToString,
                response_deserializer=operator__pb2.ListResponse.FromString,
                )
        self.GetStatus = channel.unary_unary(
                '/ansys.api.dpf.dpf_operator.v0.OperatorService/GetStatus',
                request_serializer=operator__pb2.GetStatusRequest.SerializeToString,
                response_deserializer=operator__pb2.GetStatusResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/ansys.api.dpf.dpf_operator.v0.OperatorService/Delete',
                request_serializer=operator__pb2.Operator.SerializeToString,
                response_deserializer=base__pb2.Empty.FromString,
                )
        self.ListAllOperators = channel.unary_stream(
                '/ansys.api.dpf.dpf_operator.v0.OperatorService/ListAllOperators',
                request_serializer=operator__pb2.ListAllOperatorsRequest.SerializeToString,
                response_deserializer=operator__pb2.ListAllOperatorsResponse.FromString,
                )


class OperatorServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAllOperators(self, request, context):
        """static services
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OperatorServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=operator__pb2.CreateOperatorRequest.FromString,
                    response_serializer=operator__pb2.Operator.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=operator__pb2.UpdateRequest.FromString,
                    response_serializer=base__pb2.Empty.SerializeToString,
            ),
            'UpdateConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateConfig,
                    request_deserializer=operator__pb2.UpdateConfigRequest.FromString,
                    response_serializer=base__pb2.Empty.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=operator__pb2.OperatorEvaluationRequest.FromString,
                    response_serializer=operator__pb2.OperatorResponse.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=operator__pb2.Operator.FromString,
                    response_serializer=operator__pb2.ListResponse.SerializeToString,
            ),
            'GetStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatus,
                    request_deserializer=operator__pb2.GetStatusRequest.FromString,
                    response_serializer=operator__pb2.GetStatusResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=operator__pb2.Operator.FromString,
                    response_serializer=base__pb2.Empty.SerializeToString,
            ),
            'ListAllOperators': grpc.unary_stream_rpc_method_handler(
                    servicer.ListAllOperators,
                    request_deserializer=operator__pb2.ListAllOperatorsRequest.FromString,
                    response_serializer=operator__pb2.ListAllOperatorsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ansys.api.dpf.dpf_operator.v0.OperatorService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OperatorService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.dpf_operator.v0.OperatorService/Create',
            operator__pb2.CreateOperatorRequest.SerializeToString,
            operator__pb2.Operator.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.dpf_operator.v0.OperatorService/Update',
            operator__pb2.UpdateRequest.SerializeToString,
            base__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.dpf_operator.v0.OperatorService/UpdateConfig',
            operator__pb2.UpdateConfigRequest.SerializeToString,
            base__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.dpf_operator.v0.OperatorService/Get',
            operator__pb2.OperatorEvaluationRequest.SerializeToString,
            operator__pb2.OperatorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.dpf_operator.v0.OperatorService/List',
            operator__pb2.Operator.SerializeToString,
            operator__pb2.ListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.dpf_operator.v0.OperatorService/GetStatus',
            operator__pb2.GetStatusRequest.SerializeToString,
            operator__pb2.GetStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.dpf_operator.v0.OperatorService/Delete',
            operator__pb2.Operator.SerializeToString,
            base__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAllOperators(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ansys.api.dpf.dpf_operator.v0.OperatorService/ListAllOperators',
            operator__pb2.ListAllOperatorsRequest.SerializeToString,
            operator__pb2.ListAllOperatorsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
