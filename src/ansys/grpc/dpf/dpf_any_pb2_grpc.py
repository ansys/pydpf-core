# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import ansys.grpc.dpf.dpf_any_message_pb2 as dpf__any__message__pb2
import ansys.grpc.dpf.dpf_any_pb2 as dpf__any__pb2


class DpfAnyServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
                '/ansys.api.dpf.dpf_any.v0.DpfAnyService/Create',
                request_serializer=dpf__any__pb2.CreateRequest.SerializeToString,
                response_deserializer=dpf__any__message__pb2.DpfAny.FromString,
                )
        self.List = channel.unary_unary(
                '/ansys.api.dpf.dpf_any.v0.DpfAnyService/List',
                request_serializer=dpf__any__message__pb2.DpfAny.SerializeToString,
                response_deserializer=dpf__any__pb2.ListResponse.FromString,
                )
        self.IsType = channel.unary_unary(
                '/ansys.api.dpf.dpf_any.v0.DpfAnyService/IsType',
                request_serializer=dpf__any__pb2.TypeRequest.SerializeToString,
                response_deserializer=dpf__any__pb2.TypeResponse.FromString,
                )
        self.GetAs = channel.unary_unary(
                '/ansys.api.dpf.dpf_any.v0.DpfAnyService/GetAs',
                request_serializer=dpf__any__pb2.GetAsRequest.SerializeToString,
                response_deserializer=dpf__any__pb2.GetAsResponse.FromString,
                )


class DpfAnyServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DpfAnyServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=dpf__any__pb2.CreateRequest.FromString,
                    response_serializer=dpf__any__message__pb2.DpfAny.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=dpf__any__message__pb2.DpfAny.FromString,
                    response_serializer=dpf__any__pb2.ListResponse.SerializeToString,
            ),
            'IsType': grpc.unary_unary_rpc_method_handler(
                    servicer.IsType,
                    request_deserializer=dpf__any__pb2.TypeRequest.FromString,
                    response_serializer=dpf__any__pb2.TypeResponse.SerializeToString,
            ),
            'GetAs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAs,
                    request_deserializer=dpf__any__pb2.GetAsRequest.FromString,
                    response_serializer=dpf__any__pb2.GetAsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ansys.api.dpf.dpf_any.v0.DpfAnyService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DpfAnyService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.dpf_any.v0.DpfAnyService/Create',
            dpf__any__pb2.CreateRequest.SerializeToString,
            dpf__any__message__pb2.DpfAny.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.dpf_any.v0.DpfAnyService/List',
            dpf__any__message__pb2.DpfAny.SerializeToString,
            dpf__any__pb2.ListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.dpf_any.v0.DpfAnyService/IsType',
            dpf__any__pb2.TypeRequest.SerializeToString,
            dpf__any__pb2.TypeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.dpf_any.v0.DpfAnyService/GetAs',
            dpf__any__pb2.GetAsRequest.SerializeToString,
            dpf__any__pb2.GetAsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
