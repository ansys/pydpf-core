# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import ansys.grpc.dpf.base_pb2 as base__pb2
import ansys.grpc.dpf.field_pb2 as field__pb2
import ansys.grpc.dpf.support_pb2 as support__pb2


class FieldServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
                '/ansys.api.dpf.field.v0.FieldService/Create',
                request_serializer=field__pb2.FieldRequest.SerializeToString,
                response_deserializer=field__pb2.Field.FromString,
                )
        self.AddData = channel.unary_unary(
                '/ansys.api.dpf.field.v0.FieldService/AddData',
                request_serializer=field__pb2.AddDataRequest.SerializeToString,
                response_deserializer=base__pb2.Empty.FromString,
                )
        self.UpdateData = channel.stream_unary(
                '/ansys.api.dpf.field.v0.FieldService/UpdateData',
                request_serializer=field__pb2.UpdateDataRequest.SerializeToString,
                response_deserializer=base__pb2.Empty.FromString,
                )
        self.UpdateDataPointer = channel.stream_unary(
                '/ansys.api.dpf.field.v0.FieldService/UpdateDataPointer',
                request_serializer=field__pb2.UpdateDataRequest.SerializeToString,
                response_deserializer=base__pb2.Empty.FromString,
                )
        self.UpdateScoping = channel.unary_unary(
                '/ansys.api.dpf.field.v0.FieldService/UpdateScoping',
                request_serializer=field__pb2.UpdateScopingRequest.SerializeToString,
                response_deserializer=base__pb2.Empty.FromString,
                )
        self.UpdateSize = channel.unary_unary(
                '/ansys.api.dpf.field.v0.FieldService/UpdateSize',
                request_serializer=field__pb2.UpdateSizeRequest.SerializeToString,
                response_deserializer=base__pb2.Empty.FromString,
                )
        self.UpdateFieldDefinition = channel.unary_unary(
                '/ansys.api.dpf.field.v0.FieldService/UpdateFieldDefinition',
                request_serializer=field__pb2.UpdateFieldDefinitionRequest.SerializeToString,
                response_deserializer=base__pb2.Empty.FromString,
                )
        self.UpdateElementaryData = channel.unary_unary(
                '/ansys.api.dpf.field.v0.FieldService/UpdateElementaryData',
                request_serializer=field__pb2.UpdateElementaryDataRequest.SerializeToString,
                response_deserializer=base__pb2.Empty.FromString,
                )
        self.List = channel.unary_stream(
                '/ansys.api.dpf.field.v0.FieldService/List',
                request_serializer=field__pb2.ListRequest.SerializeToString,
                response_deserializer=field__pb2.ListResponse.FromString,
                )
        self.ListDataPointer = channel.unary_stream(
                '/ansys.api.dpf.field.v0.FieldService/ListDataPointer',
                request_serializer=field__pb2.ListRequest.SerializeToString,
                response_deserializer=field__pb2.ListResponse.FromString,
                )
        self.GetScoping = channel.unary_unary(
                '/ansys.api.dpf.field.v0.FieldService/GetScoping',
                request_serializer=field__pb2.GetRequest.SerializeToString,
                response_deserializer=field__pb2.GetScopingResponse.FromString,
                )
        self.GetSupport = channel.unary_unary(
                '/ansys.api.dpf.field.v0.FieldService/GetSupport',
                request_serializer=field__pb2.SupportRequest.SerializeToString,
                response_deserializer=support__pb2.Support.FromString,
                )
        self.SetSupport = channel.unary_unary(
                '/ansys.api.dpf.field.v0.FieldService/SetSupport',
                request_serializer=field__pb2.SetSupportRequest.SerializeToString,
                response_deserializer=base__pb2.Empty.FromString,
                )
        self.GetFieldDefinition = channel.unary_unary(
                '/ansys.api.dpf.field.v0.FieldService/GetFieldDefinition',
                request_serializer=field__pb2.GetRequest.SerializeToString,
                response_deserializer=field__pb2.GetFieldDefinitionResponse.FromString,
                )
        self.GetElementaryData = channel.unary_unary(
                '/ansys.api.dpf.field.v0.FieldService/GetElementaryData',
                request_serializer=field__pb2.GetElementaryDataRequest.SerializeToString,
                response_deserializer=field__pb2.GetElementaryDataResponse.FromString,
                )
        self.Count = channel.unary_unary(
                '/ansys.api.dpf.field.v0.FieldService/Count',
                request_serializer=field__pb2.CountRequest.SerializeToString,
                response_deserializer=base__pb2.CountResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/ansys.api.dpf.field.v0.FieldService/Delete',
                request_serializer=field__pb2.Field.SerializeToString,
                response_deserializer=base__pb2.Empty.FromString,
                )


class FieldServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateData(self, request_iterator, context):
        """streams bytes from client to server 
        to choose to stream double values as doubles or floats add metadata with {"float_or_double":"float"} or {"float_or_double":"double"}
        optional: for efficiency purpose, please give the total array size in the client metadata with "size_bytes", "size_double", "size_float" or "size_int"
        if the total size is specified, the data will be directly copied in the field
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDataPointer(self, request_iterator, context):
        """streams ints as bytes from client to server 
        optional: for efficiency purpose, please give the total array size in the client metadata with "size_bytes" or "size_int"
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateScoping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateFieldDefinition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateElementaryData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """sends streamed data, to choose the size of each chunk set metadata with "num_float", "num_double", "num_int" or "num_bytes"
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDataPointer(self, request, context):
        """sends streamed data, to choose the size of each chunk set metadata with "num_double", "num_int" or "num_bytes"
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetScoping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSupport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSupport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFieldDefinition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetElementaryData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Count(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FieldServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=field__pb2.FieldRequest.FromString,
                    response_serializer=field__pb2.Field.SerializeToString,
            ),
            'AddData': grpc.unary_unary_rpc_method_handler(
                    servicer.AddData,
                    request_deserializer=field__pb2.AddDataRequest.FromString,
                    response_serializer=base__pb2.Empty.SerializeToString,
            ),
            'UpdateData': grpc.stream_unary_rpc_method_handler(
                    servicer.UpdateData,
                    request_deserializer=field__pb2.UpdateDataRequest.FromString,
                    response_serializer=base__pb2.Empty.SerializeToString,
            ),
            'UpdateDataPointer': grpc.stream_unary_rpc_method_handler(
                    servicer.UpdateDataPointer,
                    request_deserializer=field__pb2.UpdateDataRequest.FromString,
                    response_serializer=base__pb2.Empty.SerializeToString,
            ),
            'UpdateScoping': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateScoping,
                    request_deserializer=field__pb2.UpdateScopingRequest.FromString,
                    response_serializer=base__pb2.Empty.SerializeToString,
            ),
            'UpdateSize': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSize,
                    request_deserializer=field__pb2.UpdateSizeRequest.FromString,
                    response_serializer=base__pb2.Empty.SerializeToString,
            ),
            'UpdateFieldDefinition': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateFieldDefinition,
                    request_deserializer=field__pb2.UpdateFieldDefinitionRequest.FromString,
                    response_serializer=base__pb2.Empty.SerializeToString,
            ),
            'UpdateElementaryData': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateElementaryData,
                    request_deserializer=field__pb2.UpdateElementaryDataRequest.FromString,
                    response_serializer=base__pb2.Empty.SerializeToString,
            ),
            'List': grpc.unary_stream_rpc_method_handler(
                    servicer.List,
                    request_deserializer=field__pb2.ListRequest.FromString,
                    response_serializer=field__pb2.ListResponse.SerializeToString,
            ),
            'ListDataPointer': grpc.unary_stream_rpc_method_handler(
                    servicer.ListDataPointer,
                    request_deserializer=field__pb2.ListRequest.FromString,
                    response_serializer=field__pb2.ListResponse.SerializeToString,
            ),
            'GetScoping': grpc.unary_unary_rpc_method_handler(
                    servicer.GetScoping,
                    request_deserializer=field__pb2.GetRequest.FromString,
                    response_serializer=field__pb2.GetScopingResponse.SerializeToString,
            ),
            'GetSupport': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSupport,
                    request_deserializer=field__pb2.SupportRequest.FromString,
                    response_serializer=support__pb2.Support.SerializeToString,
            ),
            'SetSupport': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSupport,
                    request_deserializer=field__pb2.SetSupportRequest.FromString,
                    response_serializer=base__pb2.Empty.SerializeToString,
            ),
            'GetFieldDefinition': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFieldDefinition,
                    request_deserializer=field__pb2.GetRequest.FromString,
                    response_serializer=field__pb2.GetFieldDefinitionResponse.SerializeToString,
            ),
            'GetElementaryData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetElementaryData,
                    request_deserializer=field__pb2.GetElementaryDataRequest.FromString,
                    response_serializer=field__pb2.GetElementaryDataResponse.SerializeToString,
            ),
            'Count': grpc.unary_unary_rpc_method_handler(
                    servicer.Count,
                    request_deserializer=field__pb2.CountRequest.FromString,
                    response_serializer=base__pb2.CountResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=field__pb2.Field.FromString,
                    response_serializer=base__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ansys.api.dpf.field.v0.FieldService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FieldService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.field.v0.FieldService/Create',
            field__pb2.FieldRequest.SerializeToString,
            field__pb2.Field.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.field.v0.FieldService/AddData',
            field__pb2.AddDataRequest.SerializeToString,
            base__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateData(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/ansys.api.dpf.field.v0.FieldService/UpdateData',
            field__pb2.UpdateDataRequest.SerializeToString,
            base__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateDataPointer(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/ansys.api.dpf.field.v0.FieldService/UpdateDataPointer',
            field__pb2.UpdateDataRequest.SerializeToString,
            base__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateScoping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.field.v0.FieldService/UpdateScoping',
            field__pb2.UpdateScopingRequest.SerializeToString,
            base__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.field.v0.FieldService/UpdateSize',
            field__pb2.UpdateSizeRequest.SerializeToString,
            base__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateFieldDefinition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.field.v0.FieldService/UpdateFieldDefinition',
            field__pb2.UpdateFieldDefinitionRequest.SerializeToString,
            base__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateElementaryData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.field.v0.FieldService/UpdateElementaryData',
            field__pb2.UpdateElementaryDataRequest.SerializeToString,
            base__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ansys.api.dpf.field.v0.FieldService/List',
            field__pb2.ListRequest.SerializeToString,
            field__pb2.ListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDataPointer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ansys.api.dpf.field.v0.FieldService/ListDataPointer',
            field__pb2.ListRequest.SerializeToString,
            field__pb2.ListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetScoping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.field.v0.FieldService/GetScoping',
            field__pb2.GetRequest.SerializeToString,
            field__pb2.GetScopingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSupport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.field.v0.FieldService/GetSupport',
            field__pb2.SupportRequest.SerializeToString,
            support__pb2.Support.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSupport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.field.v0.FieldService/SetSupport',
            field__pb2.SetSupportRequest.SerializeToString,
            base__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFieldDefinition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.field.v0.FieldService/GetFieldDefinition',
            field__pb2.GetRequest.SerializeToString,
            field__pb2.GetFieldDefinitionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetElementaryData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.field.v0.FieldService/GetElementaryData',
            field__pb2.GetElementaryDataRequest.SerializeToString,
            field__pb2.GetElementaryDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Count(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.field.v0.FieldService/Count',
            field__pb2.CountRequest.SerializeToString,
            base__pb2.CountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.field.v0.FieldService/Delete',
            field__pb2.Field.SerializeToString,
            base__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
