# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import ansys.grpc.dpf.available_result_pb2 as available__result__pb2
import ansys.grpc.dpf.base_pb2 as base__pb2
import ansys.grpc.dpf.result_info_pb2 as result__info__pb2


class ResultInfoServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.List = channel.unary_unary(
                '/ansys.api.dpf.result_info.v0.ResultInfoService/List',
                request_serializer=result__info__pb2.ResultInfo.SerializeToString,
                response_deserializer=result__info__pb2.ResultInfoResponse.FromString,
                )
        self.ListQualifiersLabels = channel.unary_unary(
                '/ansys.api.dpf.result_info.v0.ResultInfoService/ListQualifiersLabels',
                request_serializer=result__info__pb2.ListQualifiersLabelsRequest.SerializeToString,
                response_deserializer=result__info__pb2.ListQualifiersLabelsResponse.FromString,
                )
        self.GetStringProperties = channel.unary_unary(
                '/ansys.api.dpf.result_info.v0.ResultInfoService/GetStringProperties',
                request_serializer=result__info__pb2.GetStringPropertiesRequest.SerializeToString,
                response_deserializer=result__info__pb2.GetStringPropertiesResponse.FromString,
                )
        self.ListResult = channel.unary_unary(
                '/ansys.api.dpf.result_info.v0.ResultInfoService/ListResult',
                request_serializer=result__info__pb2.AvailableResultRequest.SerializeToString,
                response_deserializer=available__result__pb2.AvailableResultResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/ansys.api.dpf.result_info.v0.ResultInfoService/Delete',
                request_serializer=result__info__pb2.ResultInfo.SerializeToString,
                response_deserializer=base__pb2.Empty.FromString,
                )


class ResultInfoServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def List(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListQualifiersLabels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStringProperties(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListResult(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ResultInfoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=result__info__pb2.ResultInfo.FromString,
                    response_serializer=result__info__pb2.ResultInfoResponse.SerializeToString,
            ),
            'ListQualifiersLabels': grpc.unary_unary_rpc_method_handler(
                    servicer.ListQualifiersLabels,
                    request_deserializer=result__info__pb2.ListQualifiersLabelsRequest.FromString,
                    response_serializer=result__info__pb2.ListQualifiersLabelsResponse.SerializeToString,
            ),
            'GetStringProperties': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStringProperties,
                    request_deserializer=result__info__pb2.GetStringPropertiesRequest.FromString,
                    response_serializer=result__info__pb2.GetStringPropertiesResponse.SerializeToString,
            ),
            'ListResult': grpc.unary_unary_rpc_method_handler(
                    servicer.ListResult,
                    request_deserializer=result__info__pb2.AvailableResultRequest.FromString,
                    response_serializer=available__result__pb2.AvailableResultResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=result__info__pb2.ResultInfo.FromString,
                    response_serializer=base__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ansys.api.dpf.result_info.v0.ResultInfoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ResultInfoService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.result_info.v0.ResultInfoService/List',
            result__info__pb2.ResultInfo.SerializeToString,
            result__info__pb2.ResultInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListQualifiersLabels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.result_info.v0.ResultInfoService/ListQualifiersLabels',
            result__info__pb2.ListQualifiersLabelsRequest.SerializeToString,
            result__info__pb2.ListQualifiersLabelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStringProperties(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.result_info.v0.ResultInfoService/GetStringProperties',
            result__info__pb2.GetStringPropertiesRequest.SerializeToString,
            result__info__pb2.GetStringPropertiesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.result_info.v0.ResultInfoService/ListResult',
            result__info__pb2.AvailableResultRequest.SerializeToString,
            available__result__pb2.AvailableResultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.result_info.v0.ResultInfoService/Delete',
            result__info__pb2.ResultInfo.SerializeToString,
            base__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
