





The ``for_each.py`` module
==========================

.. py:module:: ansys.dpf.core.operators.utility.for_each


Summary
-------














.. py:currentmodule:: for_each
.. tab-set::




    .. tab-item:: Classes

        .. list-table::
          :header-rows: 0
          :widths: auto


          * - :py:obj:`~ansys.dpf.core.operators.utility.for_each.for_each`
            - Allows to write a loop over a chunk of operators.


          * - :py:obj:`~ansys.dpf.core.operators.utility.for_each.InputsForEach`
            - Intermediate class used to connect user inputs to


          * - :py:obj:`~ansys.dpf.core.operators.utility.for_each.OutputsForEach`
            - Intermediate class used to get outputs from












.. toctree::
   :titlesonly:
   :maxdepth: 1
   :hidden:

    <span class="nf nf-cod-symbol_class"></span> for_each</api/ansys/dpf/core/operators/utility/for_each/for_each>
    <span class="nf nf-cod-symbol_class"></span> InputsForEach</api/ansys/dpf/core/operators/utility/for_each/InputsForEach>
    <span class="nf nf-cod-symbol_class"></span> OutputsForEach</api/ansys/dpf/core/operators/utility/for_each/OutputsForEach>









Description
-----------

for_each

Autogenerated DPF operator classes.








