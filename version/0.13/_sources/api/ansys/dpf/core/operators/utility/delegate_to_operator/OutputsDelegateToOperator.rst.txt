





:class:`OutputsDelegateToOperator`
==================================

.. py:class:: ansys.dpf.core.operators.utility.delegate_to_operator.OutputsDelegateToOperator(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.outputs._Outputs`


   Intermediate class used to get outputs from
   delegate_to_operator operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.delegate_to_operator()
   >>> # Connect inputs : op.inputs. ...
   >>> result_any1 = op.outputs.any1()
   >>> result_any2 = op.outputs.any2()





.. py:currentmodule:: OutputsDelegateToOperator

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~any1`
            - Allows to get any1 output of the operator
          * - :py:attr:`~any2`
            - Allows to get any2 output of the operator




   .. tab-item:: Special methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~__getitem__`
            - 
          * - :py:attr:`~__str__`
            - 




Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.utility.delegate_to_operator import OutputsDelegateToOperator

Property detail
---------------

.. py:property:: any1
   :type: ansys.dpf.core.outputs.Output


   Allows to get any1 output of the operator

   inputs

   :returns: An Output instance for this pin.
   :rtype: output

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.delegate_to_operator()
   >>> # Get the output from op.outputs. ...
   >>> result_any1 = op.outputs.any1()

.. py:property:: any2
   :type: ansys.dpf.core.outputs.Output


   Allows to get any2 output of the operator

   inputs

   :returns: An Output instance for this pin.
   :rtype: output

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.delegate_to_operator()
   >>> # Get the output from op.outputs. ...
   >>> result_any2 = op.outputs.any2()




Method detail
-------------

.. py:method:: __getitem__(index) -> Output

.. py:method:: __str__()




