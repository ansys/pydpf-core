





:class:`StreamsContainer`
=========================

.. py:class:: ansys.dpf.core.streams_container.StreamsContainer(streams_container=None, server: ansys.dpf.core.server_types.BaseServer = None)

   Python wrapper for operator input or output of streams.

   Streams define open, ready-to-use, data sources.
   Once the files in the streams are opened, they stay opened and
   they keep some data in cache to make the next evaluations faster.
   To close the opened files, release the handles.

   .. note:: Only available for an InProcess server configuration.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> from ansys.dpf.core import examples
   >>> model = dpf.Model(examples.find_multishells_rst())
   >>> streams_provider = model.metadata.streams_provider
   >>> sc = streams_provider.outputs.streams_container()




.. py:currentmodule:: StreamsContainer

Overview
--------

.. tab-set::



   .. tab-item:: Methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~release_handles`
            - Release the streams.


   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~datasources`
            - Return the data sources.


   .. tab-item:: Attributes

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~owned`
            - 



   .. tab-item:: Special methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~__del__`
            - Delete the entry.




Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.streams_container import StreamsContainer

Property detail
---------------

.. py:property:: datasources

   Return the data sources.



Attribute detail
----------------

.. py:attribute:: owned
   :value: False




Method detail
-------------

.. py:method:: release_handles()

   Release the streams.


.. py:method:: __del__()

   Delete the entry.





