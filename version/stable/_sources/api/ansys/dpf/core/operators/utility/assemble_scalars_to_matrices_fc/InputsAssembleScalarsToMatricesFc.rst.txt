





:class:`InputsAssembleScalarsToMatricesFc`
==========================================

.. py:class:: ansys.dpf.core.operators.utility.assemble_scalars_to_matrices_fc.InputsAssembleScalarsToMatricesFc(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   assemble_scalars_to_matrices_fc operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.assemble_scalars_to_matrices_fc()
   >>> my_xx = dpf.FieldsContainer()
   >>> op.inputs.xx.connect(my_xx)
   >>> my_yy = dpf.FieldsContainer()
   >>> op.inputs.yy.connect(my_yy)
   >>> my_zz = dpf.FieldsContainer()
   >>> op.inputs.zz.connect(my_zz)
   >>> my_xy = dpf.FieldsContainer()
   >>> op.inputs.xy.connect(my_xy)
   >>> my_yz = dpf.FieldsContainer()
   >>> op.inputs.yz.connect(my_yz)
   >>> my_xz = dpf.FieldsContainer()
   >>> op.inputs.xz.connect(my_xz)
   >>> my_yx = dpf.FieldsContainer()
   >>> op.inputs.yx.connect(my_yx)
   >>> my_zy = dpf.FieldsContainer()
   >>> op.inputs.zy.connect(my_zy)
   >>> my_zx = dpf.FieldsContainer()
   >>> op.inputs.zx.connect(my_zx)
   >>> my_symmetrical = bool()
   >>> op.inputs.symmetrical.connect(my_symmetrical)






.. py:currentmodule:: InputsAssembleScalarsToMatricesFc

Overview
--------

.. tab-set::



   .. tab-item:: Methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~connect`
            - Connect any input (an entity or an operator output) to any input pin of this operator.


   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~xx`
            - Allows to connect xx input to the operator.
          * - :py:attr:`~yy`
            - Allows to connect yy input to the operator.
          * - :py:attr:`~zz`
            - Allows to connect zz input to the operator.
          * - :py:attr:`~xy`
            - Allows to connect xy input to the operator.
          * - :py:attr:`~yz`
            - Allows to connect yz input to the operator.
          * - :py:attr:`~xz`
            - Allows to connect xz input to the operator.
          * - :py:attr:`~yx`
            - Allows to connect yx input to the operator.
          * - :py:attr:`~zy`
            - Allows to connect zy input to the operator.
          * - :py:attr:`~zx`
            - Allows to connect zx input to the operator.
          * - :py:attr:`~symmetrical`
            - Allows to connect symmetrical input to the operator.




   .. tab-item:: Special methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~__str__`
            - 
          * - :py:attr:`~__call__`
            - 
          * - :py:attr:`~__getitem__`
            - 




Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.utility.assemble_scalars_to_matrices_fc import InputsAssembleScalarsToMatricesFc

Property detail
---------------

.. py:property:: xx
   :type: ansys.dpf.core.inputs.Input


   Allows to connect xx input to the operator.

   :returns: An Input instance for this pin.
   :rtype: input

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.assemble_scalars_to_matrices_fc()
   >>> op.inputs.xx.connect(my_xx)
   >>> # or
   >>> op.inputs.xx(my_xx)

.. py:property:: yy
   :type: ansys.dpf.core.inputs.Input


   Allows to connect yy input to the operator.

   :returns: An Input instance for this pin.
   :rtype: input

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.assemble_scalars_to_matrices_fc()
   >>> op.inputs.yy.connect(my_yy)
   >>> # or
   >>> op.inputs.yy(my_yy)

.. py:property:: zz
   :type: ansys.dpf.core.inputs.Input


   Allows to connect zz input to the operator.

   :returns: An Input instance for this pin.
   :rtype: input

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.assemble_scalars_to_matrices_fc()
   >>> op.inputs.zz.connect(my_zz)
   >>> # or
   >>> op.inputs.zz(my_zz)

.. py:property:: xy
   :type: ansys.dpf.core.inputs.Input


   Allows to connect xy input to the operator.

   :returns: An Input instance for this pin.
   :rtype: input

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.assemble_scalars_to_matrices_fc()
   >>> op.inputs.xy.connect(my_xy)
   >>> # or
   >>> op.inputs.xy(my_xy)

.. py:property:: yz
   :type: ansys.dpf.core.inputs.Input


   Allows to connect yz input to the operator.

   :returns: An Input instance for this pin.
   :rtype: input

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.assemble_scalars_to_matrices_fc()
   >>> op.inputs.yz.connect(my_yz)
   >>> # or
   >>> op.inputs.yz(my_yz)

.. py:property:: xz
   :type: ansys.dpf.core.inputs.Input


   Allows to connect xz input to the operator.

   :returns: An Input instance for this pin.
   :rtype: input

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.assemble_scalars_to_matrices_fc()
   >>> op.inputs.xz.connect(my_xz)
   >>> # or
   >>> op.inputs.xz(my_xz)

.. py:property:: yx
   :type: ansys.dpf.core.inputs.Input


   Allows to connect yx input to the operator.

   :returns: An Input instance for this pin.
   :rtype: input

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.assemble_scalars_to_matrices_fc()
   >>> op.inputs.yx.connect(my_yx)
   >>> # or
   >>> op.inputs.yx(my_yx)

.. py:property:: zy
   :type: ansys.dpf.core.inputs.Input


   Allows to connect zy input to the operator.

   :returns: An Input instance for this pin.
   :rtype: input

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.assemble_scalars_to_matrices_fc()
   >>> op.inputs.zy.connect(my_zy)
   >>> # or
   >>> op.inputs.zy(my_zy)

.. py:property:: zx
   :type: ansys.dpf.core.inputs.Input


   Allows to connect zx input to the operator.

   :returns: An Input instance for this pin.
   :rtype: input

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.assemble_scalars_to_matrices_fc()
   >>> op.inputs.zx.connect(my_zx)
   >>> # or
   >>> op.inputs.zx(my_zx)

.. py:property:: symmetrical
   :type: ansys.dpf.core.inputs.Input


   Allows to connect symmetrical input to the operator.

   :returns: An Input instance for this pin.
   :rtype: input

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.assemble_scalars_to_matrices_fc()
   >>> op.inputs.symmetrical.connect(my_symmetrical)
   >>> # or
   >>> op.inputs.symmetrical(my_symmetrical)




Method detail
-------------

.. py:method:: __str__()

.. py:method:: connect(inpt)

   Connect any input (an entity or an operator output) to any input pin of this operator.

   Searches for the input type corresponding to the output.

   .. deprecated::
       Deprecated in favor of explicit output-to-input connections.

   :param inpt:
   :type inpt: str, int, double, bool, list[int], list[float], Field, FieldsContainer, Scoping, Enum,
   :param ScopingsContainer: Input of the operator.
   :type ScopingsContainer: E501
   :param MeshedRegion: Input of the operator.
   :type MeshedRegion: E501
   :param MeshesContainer: Input of the operator.
   :type MeshesContainer: E501
   :param DataSources: Input of the operator.
   :type DataSources: E501
   :param CyclicSupport: Input of the operator.
   :type CyclicSupport: E501
   :param Outputs: Input of the operator.
   :type Outputs: E501
   :param os.PathLike  # noqa: Input of the operator.
   :type os.PathLike  # noqa: E501


.. py:method:: __call__(inpt)

.. py:method:: __getitem__(item) -> Input




