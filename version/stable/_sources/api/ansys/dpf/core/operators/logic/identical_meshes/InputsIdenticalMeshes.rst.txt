





:class:`InputsIdenticalMeshes`
==============================

.. py:class:: ansys.dpf.core.operators.logic.identical_meshes.InputsIdenticalMeshes(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   identical_meshes operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.logic.identical_meshes()
   >>> my_meshA = dpf.MeshedRegion()
   >>> op.inputs.meshA.connect(my_meshA)
   >>> my_meshB = dpf.MeshedRegion()
   >>> op.inputs.meshB.connect(my_meshB)
   >>> my_small_value = float()
   >>> op.inputs.small_value.connect(my_small_value)
   >>> my_tolerance = float()
   >>> op.inputs.tolerance.connect(my_tolerance)
   >>> my_compare_auxiliary = bool()
   >>> op.inputs.compare_auxiliary.connect(my_compare_auxiliary)






.. py:currentmodule:: InputsIdenticalMeshes

Overview
--------

.. tab-set::



   .. tab-item:: Methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~connect`
            - Connect any input (an entity or an operator output) to any input pin of this operator.


   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~meshA`
            - Allows to connect meshA input to the operator.
          * - :py:attr:`~meshB`
            - Allows to connect meshB input to the operator.
          * - :py:attr:`~small_value`
            - Allows to connect small_value input to the operator.
          * - :py:attr:`~tolerance`
            - Allows to connect tolerance input to the operator.
          * - :py:attr:`~compare_auxiliary`
            - Allows to connect compare_auxiliary input to the operator.




   .. tab-item:: Special methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~__str__`
            - 
          * - :py:attr:`~__call__`
            - 
          * - :py:attr:`~__getitem__`
            - 




Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.logic.identical_meshes import InputsIdenticalMeshes

Property detail
---------------

.. py:property:: meshA
   :type: ansys.dpf.core.inputs.Input


   Allows to connect meshA input to the operator.

   :returns: An Input instance for this pin.
   :rtype: input

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.logic.identical_meshes()
   >>> op.inputs.meshA.connect(my_meshA)
   >>> # or
   >>> op.inputs.meshA(my_meshA)

.. py:property:: meshB
   :type: ansys.dpf.core.inputs.Input


   Allows to connect meshB input to the operator.

   :returns: An Input instance for this pin.
   :rtype: input

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.logic.identical_meshes()
   >>> op.inputs.meshB.connect(my_meshB)
   >>> # or
   >>> op.inputs.meshB(my_meshB)

.. py:property:: small_value
   :type: ansys.dpf.core.inputs.Input


   Allows to connect small_value input to the operator.

   define what is a small value for numeric comparison (default value:1.0e-14).

   :returns: An Input instance for this pin.
   :rtype: input

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.logic.identical_meshes()
   >>> op.inputs.small_value.connect(my_small_value)
   >>> # or
   >>> op.inputs.small_value(my_small_value)

.. py:property:: tolerance
   :type: ansys.dpf.core.inputs.Input


   Allows to connect tolerance input to the operator.

   define the relative tolerance ceil for numeric comparison (default is 0.001).

   :returns: An Input instance for this pin.
   :rtype: input

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.logic.identical_meshes()
   >>> op.inputs.tolerance.connect(my_tolerance)
   >>> # or
   >>> op.inputs.tolerance(my_tolerance)

.. py:property:: compare_auxiliary
   :type: ansys.dpf.core.inputs.Input


   Allows to connect compare_auxiliary input to the operator.

   compare auxiliary data (i.e property fields, scopings...). Default value is 'false'.

   :returns: An Input instance for this pin.
   :rtype: input

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.logic.identical_meshes()
   >>> op.inputs.compare_auxiliary.connect(my_compare_auxiliary)
   >>> # or
   >>> op.inputs.compare_auxiliary(my_compare_auxiliary)




Method detail
-------------

.. py:method:: __str__()

.. py:method:: connect(inpt)

   Connect any input (an entity or an operator output) to any input pin of this operator.

   Searches for the input type corresponding to the output.

   .. deprecated::
       Deprecated in favor of explicit output-to-input connections.

   :param inpt:
   :type inpt: str, int, double, bool, list[int], list[float], Field, FieldsContainer, Scoping, Enum,
   :param ScopingsContainer: Input of the operator.
   :type ScopingsContainer: E501
   :param MeshedRegion: Input of the operator.
   :type MeshedRegion: E501
   :param MeshesContainer: Input of the operator.
   :type MeshesContainer: E501
   :param DataSources: Input of the operator.
   :type DataSources: E501
   :param CyclicSupport: Input of the operator.
   :type CyclicSupport: E501
   :param Outputs: Input of the operator.
   :type Outputs: E501
   :param os.PathLike  # noqa: Input of the operator.
   :type os.PathLike  # noqa: E501


.. py:method:: __call__(inpt)

.. py:method:: __getitem__(item) -> Input




