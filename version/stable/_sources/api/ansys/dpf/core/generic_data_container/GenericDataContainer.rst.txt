





:class:`GenericDataContainer`
=============================

.. py:class:: ansys.dpf.core.generic_data_container.GenericDataContainer(generic_data_container=None, server=None)

   Maps properties to their DPF supported Data Types.

   :param generic_data_container:
   :type generic_data_container: ctypes.c_void_p, ansys.grpc.dpf.generic_data_container_pb2.GenericDataContainer message, optional  # noqa: E501
   :param server: Server with channel connected to the remote or local instance.
                  The default is ``None``, in which case an attempt is made to use the
                  global server.
   :type server: DPFServer, optional

   .. rubric:: Notes

   Class available with server's version starting at 7.0 (Ansys 2024 R1 pre0).





.. py:currentmodule:: GenericDataContainer

Overview
--------

.. tab-set::



   .. tab-item:: Methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~set_property`
            - Register given property with the given name.
          * - :py:attr:`~get_property`
            - Get property with given name.
          * - :py:attr:`~get_property_description`
            - Get a dictionary description of properties by name and data type.





   .. tab-item:: Special methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~__str__`
            - Describe the entity.
          * - :py:attr:`~__del__`
            - Delete the current instance.




Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.generic_data_container import GenericDataContainer



Method detail
-------------

.. py:method:: __str__()

   Describe the entity.

   :returns: **description** -- Description of the entity.
   :rtype: str


.. py:method:: set_property(property_name: str, prop: Union[int, float, str, ansys.dpf.core.Field, ansys.dpf.core.StringField, ansys.dpf.core.GenericDataContainer, ansys.dpf.core.Scoping])

   Register given property with the given name.

   :param property_name: Property name.
   :param prop: Property object.


.. py:method:: get_property(property_name, output_type: Union[None, type, ansys.dpf.core.types] = None)

   Get property with given name.

   :param property_name: Property name.
   :type property_name: str
   :param output_type: Expected type of the output. By default, type is deduced using
                       `GenericDataContainer.get_property_description`.
   :type output_type: None, type, types, optional

   :rtype: Property object instance.


.. py:method:: get_property_description()

   Get a dictionary description of properties by name and data type.

   :returns: **description** -- Description of the GenericDataContainer's contents
   :rtype: dict


.. py:method:: __del__()

   Delete the current instance.





