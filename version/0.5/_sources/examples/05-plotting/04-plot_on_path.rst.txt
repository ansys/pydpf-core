
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\05-plotting\04-plot_on_path.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_05-plotting_04-plot_on_path.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_05-plotting_04-plot_on_path.py:


.. _plot_on_path:

Plot results on a specific path
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This example shows how to get a result mapped over a specific path,
and how to plot it.

.. GENERATED FROM PYTHON SOURCE LINES 10-16

.. code-block:: default


    from ansys.dpf import core as dpf
    from ansys.dpf.core import examples
    from ansys.dpf.core import operators as ops
    from ansys.dpf.core.plotter import DpfPlotter








.. GENERATED FROM PYTHON SOURCE LINES 17-21

Path plotting
~~~~~~~~~~~~~
We will use an :class:`ansys.dpf.core.plotter.DpfPlotter` to plot a mapped result over
a defined path of coordinates.

.. GENERATED FROM PYTHON SOURCE LINES 21-28

.. code-block:: default


    # First, we need to create the model, request its mesh and its
    # displacement data
    model = dpf.Model(examples.static_rst)
    mesh = model.metadata.meshed_region
    stress_fc = model.results.stress().eqv().eval()








.. GENERATED FROM PYTHON SOURCE LINES 29-30

Then, we create a coordinates field to map on

.. GENERATED FROM PYTHON SOURCE LINES 30-39

.. code-block:: default

    coordinates = [[0.024, 0.03, 0.003]]
    for i in range(1, 51):
        coord_copy = coordinates[0].copy()
        coord_copy[1] = coord_copy[0] + i * 0.001
        coordinates.append(coord_copy)
    field_coord = dpf.fields_factory.create_3d_vector_field(len(coordinates))
    field_coord.data = coordinates
    field_coord.scoping.ids = list(range(1, len(coordinates) + 1))








.. GENERATED FROM PYTHON SOURCE LINES 40-41

Let's now compute the mapped data using the mapping operator

.. GENERATED FROM PYTHON SOURCE LINES 41-48

.. code-block:: default

    mapping_operator = ops.mapping.on_coordinates(
        fields_container=stress_fc,
        coordinates=field_coord,
        create_support=True,
        mesh=mesh)
    fields_mapped = mapping_operator.outputs.fields_container()








.. GENERATED FROM PYTHON SOURCE LINES 49-50

Here, we request the mapped field data and its mesh

.. GENERATED FROM PYTHON SOURCE LINES 50-53

.. code-block:: default

    field_m = fields_mapped[0]
    mesh_m = field_m.meshed_region








.. GENERATED FROM PYTHON SOURCE LINES 54-55

Now we create the plotter and add fields and meshes

.. GENERATED FROM PYTHON SOURCE LINES 55-63

.. code-block:: default

    pl = DpfPlotter()

    pl.add_field(field_m, mesh_m)
    pl.add_mesh(mesh, style="surface", show_edges=True,
                color="w", opacity=0.3)

    # Finally we plot the result
    pl.show_figure(show_axes=True)



.. image-sg:: /examples/05-plotting/images/sphx_glr_04-plot_on_path_001.png
   :alt: 04 plot on path
   :srcset: /examples/05-plotting/images/sphx_glr_04-plot_on_path_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.330 seconds)


.. _sphx_glr_download_examples_05-plotting_04-plot_on_path.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 04-plot_on_path.py <04-plot_on_path.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 04-plot_on_path.ipynb <04-plot_on_path.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
