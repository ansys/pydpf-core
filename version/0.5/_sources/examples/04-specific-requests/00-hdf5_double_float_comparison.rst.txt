
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\04-specific-requests\00-hdf5_double_float_comparison.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_04-specific-requests_00-hdf5_double_float_comparison.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_04-specific-requests_00-hdf5_double_float_comparison.py:


.. _ref_basic_hdf5:

Hdf5 export and compare precision
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This example shows how to use hdf5 format to export and
make a comparison between simple/double precision.

.. GENERATED FROM PYTHON SOURCE LINES 12-13

Import dpf module and its examples files, and create a temporary directory

.. GENERATED FROM PYTHON SOURCE LINES 13-23

.. code-block:: default


    import os
    import tempfile

    from ansys.dpf import core as dpf
    from ansys.dpf.core import examples
    from ansys.dpf.core import operators as ops

    tmpdir = tempfile.mkdtemp()








.. GENERATED FROM PYTHON SOURCE LINES 24-25

Create the model and get stresses, displacements and mesh.

.. GENERATED FROM PYTHON SOURCE LINES 25-33

.. code-block:: default


    transient = examples.download_transient_result()
    model = dpf.Model(transient)

    stress = model.results.stress()
    displacement = model.results.displacement()
    mesh = model.metadata.meshed_region








.. GENERATED FROM PYTHON SOURCE LINES 34-35

Create the hdf5 export operator. Hdf5 module should already be loaded.

.. GENERATED FROM PYTHON SOURCE LINES 35-39

.. code-block:: default


    h5op = ops.serialization.serialize_to_hdf5()
    print(h5op)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    DPF serialize_to_hdf5 Operator: 
      Serialize the inputs in an hdf5 format. 
      Inputs:
             file_path [string]: output file path with .h5 extension 
             export_floats [bool]: converts double to float to reduce file size (default is true) 
             export_flat_vectors [bool]: if true, vectors and matrices data are exported flat (x1,y1,z1,x2,y2,z2..) (default is false) 
             data (ellipsis) []: only the data set explicitly to export is exported 
      Run the operator to get its result





.. GENERATED FROM PYTHON SOURCE LINES 40-42

Connect the correct time scoping to the results operators (stress
and displacement).

.. GENERATED FROM PYTHON SOURCE LINES 42-49

.. code-block:: default


    timeIds = list(range(1, model.metadata.time_freq_support.n_sets + 1))
    timeIds

    stress.inputs.time_scoping.connect(timeIds)
    displacement.inputs.time_scoping.connect(timeIds)








.. GENERATED FROM PYTHON SOURCE LINES 50-51

Connect inputs of the hdf5 export operator.

.. GENERATED FROM PYTHON SOURCE LINES 51-56

.. code-block:: default


    h5op.inputs.data1.connect(stress.outputs)
    h5op.inputs.data2.connect(displacement.outputs)
    h5op.inputs.data3.connect(mesh)








.. GENERATED FROM PYTHON SOURCE LINES 57-58

Export with simple precision

.. GENERATED FROM PYTHON SOURCE LINES 58-66

.. code-block:: default


    directory = "c:/temp/"
    if os.name == "posix":
        directory = "/tmp/"

    h5op.inputs.file_path.connect(os.path.join(tmpdir, directory, "dpf_float.h5"))
    h5op.run()








.. GENERATED FROM PYTHON SOURCE LINES 67-68

Export with simple precision

.. GENERATED FROM PYTHON SOURCE LINES 68-73

.. code-block:: default


    h5op.inputs.export_floats.connect(False)
    h5op.inputs.file_path.connect(os.path.join(tmpdir, directory, "dpf_double.h5"))
    h5op.run()








.. GENERATED FROM PYTHON SOURCE LINES 74-75

Comparison

.. GENERATED FROM PYTHON SOURCE LINES 75-81

.. code-block:: default

    float_precision = os.stat(os.path.join(tmpdir, directory, "dpf_float.h5")).st_size
    double_precision = os.stat(os.path.join(tmpdir, directory, "dpf_double.h5")).st_size
    print(
        f"size with float precision: {float_precision}\n"
        f"size with double precision: {double_precision}"
    )




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    size with float precision: 6703264
    size with double precision: 13112464





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.187 seconds)


.. _sphx_glr_download_examples_04-specific-requests_00-hdf5_double_float_comparison.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 00-hdf5_double_float_comparison.py <00-hdf5_double_float_comparison.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 00-hdf5_double_float_comparison.ipynb <00-hdf5_double_float_comparison.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
