





:class:`PinSpecification`
=========================


.. py:class:: ansys.dpf.core.operator_specification.PinSpecification(name: str, type_names: list, document='', optional=False, ellipsis=False, name_derived_class='', aliases=[])

   Documents an input or output pin of an Operator.

   :param name: Name of the Pin.
   :type name: str
   :param type_names: List of accepted types.
   :type type_names: list[str], list[type], list[ansys.dpf.core.types], ansys.dpf.core.types, type, str
   :param document: Explains what the pin is used for and what should be connect to it.
   :type document: str, optional
   :param optional: Whether it is optional to connect to Pin or not. Default is False.
   :type optional: bool, optional
   :param ellipsis: Whether data respecting this PinSpecification can be connected
                    from this pin number to infinity. Default is False.
   :type ellipsis: bool, optional

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> operator = dpf.operators.result.displacement()
   >>> pin_spec = operator.specification.inputs[4]
   >>> pin_spec.name
   'data_sources'
   >>> pin_spec.type_names
   ['data_sources']
   >>> pin_spec.document
   'result file path container, used if no streams are set'
   >>> pin_spec.optional
   False





.. py:currentmodule:: PinSpecification

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~type_names`
            - Return the list of accepted types.


   .. tab-item:: Attributes

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~name`
            - 
          * - :py:attr:`~document`
            - 
          * - :py:attr:`~optional`
            - 
          * - :py:attr:`~ellipsis`
            - 
          * - :py:attr:`~name_derived_class`
            - 
          * - :py:attr:`~aliases`
            - 



   .. tab-item:: Special methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~__repr__`
            - Provide more detail in the representation of the instance.
          * - :py:attr:`~__eq__`
            - One instance is equal to the other if their string representation is the same.




Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operator_specification import PinSpecification

Property detail
---------------

.. py:property:: type_names
   :type: list[str]


   Return the list of accepted types.

   :returns: List of accepted types.
   :rtype: list[str], list[type]



Attribute detail
----------------

.. py:attribute:: name
   :type:  str

.. py:attribute:: document
   :type:  str

.. py:attribute:: optional
   :type:  bool

.. py:attribute:: ellipsis
   :type:  bool

.. py:attribute:: name_derived_class

.. py:attribute:: aliases
   :type:  list[str]



Method detail
-------------

.. py:method:: __repr__()

   Provide more detail in the representation of the instance.


.. py:method:: __eq__(other)

   One instance is equal to the other if their string representation is the same.





