





:class:`InputsQuantizationFc`
=============================


.. py:class:: ansys.dpf.core.operators.compression.quantization_fc.InputsQuantizationFc(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   quantization_fc operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.compression.quantization_fc()
   >>> my_input_fc = dpf.FieldsContainer()
   >>> op.inputs.input_fc.connect(my_input_fc)
   >>> my_threshold = float()
   >>> op.inputs.threshold.connect(my_threshold)






.. py:currentmodule:: InputsQuantizationFc

Overview
--------

.. tab-set::



   .. tab-item:: Methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~connect`
            - Connect any input (an entity or an operator output) to any input pin of this operator.


   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~input_fc`
            - Allows to connect input_fc input to the operator.
          * - :py:attr:`~threshold`
            - Allows to connect threshold input to the operator.




   .. tab-item:: Special methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~__str__`
            - 
          * - :py:attr:`~__call__`
            - 
          * - :py:attr:`~__getitem__`
            - 




Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.compression.quantization_fc import InputsQuantizationFc

Property detail
---------------

.. py:property:: input_fc
   :type: ansys.dpf.core.inputs.Input


   Allows to connect input_fc input to the operator.

   Fields container to be quantized.

   :returns: An Input instance for this pin.
   :rtype: input

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.compression.quantization_fc()
   >>> op.inputs.input_fc.connect(my_input_fc)
   >>> # or
   >>> op.inputs.input_fc(my_input_fc)

.. py:property:: threshold
   :type: ansys.dpf.core.inputs.Input


   Allows to connect threshold input to the operator.

   Precision threshold desired.
   Case double : the threshold is applied on all the fields of the input fields container.
   Case field with one, numComp or input size values : the threshold is used for each field of the input fields container.
   Case fields container : the corresponding threshold field is found by matching label.


   :returns: An Input instance for this pin.
   :rtype: input

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.compression.quantization_fc()
   >>> op.inputs.threshold.connect(my_threshold)
   >>> # or
   >>> op.inputs.threshold(my_threshold)




Method detail
-------------

.. py:method:: __str__()

.. py:method:: connect(inpt)

   Connect any input (an entity or an operator output) to any input pin of this operator.

   Searches for the input type corresponding to the output.

   .. deprecated::
       Deprecated in favor of explicit output-to-input connections.

   :param inpt:
   :type inpt: str, int, double, bool, list[int], list[float], Field, FieldsContainer, Scoping, Enum,
   :param ScopingsContainer: Input of the operator.
   :type ScopingsContainer: E501
   :param MeshedRegion: Input of the operator.
   :type MeshedRegion: E501
   :param MeshesContainer: Input of the operator.
   :type MeshesContainer: E501
   :param DataSources: Input of the operator.
   :type DataSources: E501
   :param CyclicSupport: Input of the operator.
   :type CyclicSupport: E501
   :param Outputs: Input of the operator.
   :type Outputs: E501
   :param os.PathLike  # noqa: Input of the operator.
   :type os.PathLike  # noqa: E501


.. py:method:: __call__(inpt)

.. py:method:: __getitem__(item) -> Input




