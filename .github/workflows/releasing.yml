name: Release

on:
  pull_request:
     branches:
       - 'release/**'
  push:
    branches:
       - 'release/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  PACKAGE_NAME: ansys-dpf-core
  MODULE: core
  ANSYS_VERSION: 221

jobs:
  Build_and_Test:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        os: ["windows-latest", "ubuntu-latest"]

    steps:
      - uses: actions/checkout@v3

      - name: "Build Package"
        uses: pyansys/pydpf-actions/build_package@v2.1
        with:
          python-version: ${{ matrix.python-version }}
          ANSYS_VERSION: ${{env.ANSYS_VERSION}}
          PACKAGE_NAME: ${{env.PACKAGE_NAME}}
          MODULE: ${{env.MODULE}}
          dpf-standalone-TOKEN: ${{secrets.DPF_PIPELINE}}
          install_extras: plotting

      - name: "Test Package"
        uses: pyansys/pydpf-actions/test_package@v2.1
        with:
          MODULE: ${{env.MODULE}}

  Build_doc:
    name: Documentation
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: "Build Documentation"
        uses: pyansys/pydpf-actions/build_doc@v2.1
        with:
          python-version: "3.8"
          ANSYS_VERSION: ${{env.ANSYS_VERSION}}
          PACKAGE_NAME: ${{env.PACKAGE_NAME}}
          MODULE: ${{env.MODULE}}
          dpf-standalone-TOKEN: ${{secrets.DPF_PIPELINE}}
          install_extras: plotting
          generate_pdf: "False"
        timeout-minutes: 30

  Push_Doc:
    name: Push Doc
    runs-on: ubuntu-latest
    needs: [ Build_Doc ]
    steps:
      - uses: actions/checkout@v3

      - name: "Push Documentation"
        uses: pyansys/pydpf-actions/push_doc@v2.1
        with:
          PYANSYS_CI_BOT_TOKEN: ${{secrets.PYANSYS_CI_BOT_TOKEN}}
          DOC_REPO: DPF-Core-docs

  Test_Release:
    runs-on: ubuntu-latest
    needs: [ Build_and_Test, Push_Doc ]
    if: not contains(github.ref, 'refs/tags')
    steps:
      - name: "Release Package to TestPyPi"
        uses: pyansys/pydpf-actions/release_package@v2.1
        with:
          PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
          TEST: "true"

  Release:
    runs-on: ubuntu-latest
    needs: [ Build_and_Test, Push_Doc ]
    if: contains(github.ref, 'refs/tags')
    steps:
      - name: "Release Package"
        uses: pyansys/pydpf-actions/release_package@v2.1
        with:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
