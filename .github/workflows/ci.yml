name: CI

on:
  pull_request:
     branches-ignore:
       - '*no-ci*'
  push:
    tags:
      - "*"
    branches:
      - master
      - "release*"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  MAIN_PYTHON_VERSION: "3.10"
  PACKAGE_NAME: ansys-dpf-core
  MODULE: core
  ANSYS_VERSION: 221


jobs:

  style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip tox

      - name: Test with tox
        run: tox -e style

  docs-style:
    name: Documentation Style Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Running Vale
        uses: errata-ai/vale-action@reviewdog
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          files: doc
          reporter: github-pr-check
          level: error
          filter_mode: nofilter
          fail_on_error: true
          vale_flags: "--config=doc/.vale.ini"

  doc:
    name: Documentation
    runs-on: ubuntu-latest
    needs: docs-style
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip tox

      - name: Build documentation
        run: |
          tox -e doc
          touch .tox/doc_out/.nojekyll
          echo "dpfdocs.pyansys.com" > .tox/doc_out/CNAME

      - name: Upload Documentation
        uses: actions/upload-artifact@v3
        with:
          name: HTML-Documentation
          path: .tox/doc_out/
          retention-days: 7

      - name: Deploy to gh-pages
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
        uses: JamesIves/github-pages-deploy-action@v4.3.4
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: .tox/doc_out/
          CLEAN: true
          SINGLE_COMMIT: true

  tests:
    name: Tests
    needs: style
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        cfg:
          - {python-version: "3.7", toxenv: "py37"}
          - {python-version: "3.8", toxenv: "py38"}
          - {python-version: "3.9", toxenv: "py39"}
          - {python-version: "3.10", toxenv: "py310-cov"}
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.cfg.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.cfg.python-version }}

      - name: Install dependencies
        run: python -m pip install --upgrade pip tox

      - name: Run Tox
        run: tox -e ${{ matrix.cfg.toxenv }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        if: matrix.cfg.python-version ==  ${{ env.MAIN_PYTHON_VERSION }} && matrix.os == ubuntu-latest

  build:
    name: Build library
    runs-on: ubuntu-latest
    needs: [tests, doc]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
      - name: Install dependencies and build the library
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements/requirements_build.txt
          python -m build && python -m twin check dist/*

  release:
    name: Release
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    needs: build
    runs-on: ubuntu-latest
  
    steps:
      - uses: actions/download-artifact@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
      - name: Display structure of downloaded files
        run: ls -R
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip twine
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          python -m twine upload --skip-existing ./**/*.whl
          python -m twine upload --skip-existing ./**/*.tar.gz
      - name: Publish to GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./**/*.whl
            ./**/*.tar.gz
