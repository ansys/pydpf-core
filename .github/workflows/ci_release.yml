name: CI Release

on:
  push:
    tags:
      - "v*"
  schedule:
    - cron: "0 13 * * 0"
  workflow_dispatch:
    inputs:
      standalone_branch_suffix:
        description: 'Suffix of the branch on standalone'
        required: false
        default: '.pre1'

#┌───────────── minute (0 - 59)
#│ ┌───────────── hour (0 - 23)
#│ │ ┌───────────── day of the month (1 - 31)
#│ │ │ ┌───────────── month (1 - 12)
#│ │ │ │ ┌───────────── day of the week (0 - 6), 0 being Sunday
#│ │ │ │ │
#│ │ │ │ │
#│ │ │ │ │
#* * * * *

env:
  ANSYS_VERSION: 232
  DOCUMENTATION_CNAME: 'dpf.docs.pyansys.com'
  MAIN_PYTHON_VERSION: '3.8'

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
    - name: Show the Github context for the triggered event
      run: echo "$GITHUB_CONTEXT"
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}

  style:
    name: "Style Check"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: "Setup Python"
        uses: actions/setup-python@v4.6.0
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: "Install pre-commit"
        run: pip install pre-commit

      - name: "Run pre-commit"
        run: pre-commit run --all-files --show-diff-on-failure

  tests:
    uses: ./.github/workflows/tests.yml
    with:
      ANSYS_VERSION: "232"
      python_versions: '["3.7", "3.8", "3.9", "3.10"]'
      wheel: true
      wheelhouse: true
      standalone_suffix: ${{ github.event.inputs.standalone_branch_suffix || '.pre1' }}
    secrets: inherit

  docs:
    uses: ./.github/workflows/docs.yml
    with:
      ANSYS_VERSION: "232"
      standalone_suffix: ${{ github.event.inputs.standalone_branch_suffix || '.pre1' }}
      event_name: ${{ github.event_name }}
    secrets: inherit

  examples:
    uses: ./.github/workflows/examples.yml
    with:
      ANSYS_VERSION: "232"
      python_versions: '["3.7", "3.8", "3.9", "3.10"]'
      standalone_suffix: ${{ github.event.inputs.standalone_branch_suffix || '.pre1' }}
    secrets: inherit

  retro_231:
    name: "retro 231"
    uses: ./.github/workflows/tests.yml
    with:
      ANSYS_VERSION: "231"
      python_versions: '["3.8"]'
      DOCSTRING: false
    secrets: inherit

  retro_222:
    name: "retro 222"
    uses: ./.github/workflows/tests.yml
    with:
      ANSYS_VERSION: "222"
      python_versions: '["3.8"]'
      DOCSTRING: false
    secrets: inherit

  retro_221:
    name: "retro 221"
    uses: ./.github/workflows/tests.yml
    with:
      ANSYS_VERSION: "221"
      python_versions: '["3.8"]'
      DOCSTRING: false
    secrets: inherit

  pydpf-post_232:
    name: "PyDPF-Post with 232"
    uses: ./.github/workflows/pydpf-post.yml
    with:
      ANSYS_VERSION: "232"
      standalone_suffix: ${{ github.event.inputs.standalone_branch_suffix || '.pre1' }}
    secrets: inherit

  pydpf-post_231:
    name: "PyDPF-Post with 231"
    uses: ./.github/workflows/pydpf-post.yml
    with:
      ANSYS_VERSION: "231"
    secrets: inherit

  pydpf-post_222:
    name: "PyDPF-Post with 222"
    uses: ./.github/workflows/pydpf-post.yml
    with:
      ANSYS_VERSION: "222"
    secrets: inherit

  pydpf-post_221:
    name: "PyDPF-Post with 221"
    uses: ./.github/workflows/pydpf-post.yml
    with:
      ANSYS_VERSION: "221"
    secrets: inherit

  gate:
    name: "gate"
    uses: ./.github/workflows/gate.yml
    with:
      standalone_suffix: ${{ github.event.inputs.standalone_branch_suffix || '.pre1' }}
    secrets: inherit

  docker_tests:
    name: "Build and Test on Docker"
    uses: ./.github/workflows/test_docker.yml
    with:
      standalone_suffix: ${{ github.event.inputs.standalone_branch_suffix || '.pre1' }}
    secrets: inherit

  docker_examples:
    name: "Run examples on Docker"
    uses: ./.github/workflows/examples_docker.yml
    with:
      ANSYS_VERSION: "232"
      python_versions: '["3.8", "3.9", "3.10"]'
      standalone_suffix: ${{ github.event.inputs.standalone_branch_suffix || '' }}
      custom-requirements: ${{ github.event.inputs.custom-requirements || 'requirements/requirements_dev.txt' }}
      custom-wheels: ${{ github.event.inputs.custom-wheels-docker || './dpf-standalone/dist' }}
    secrets: inherit

  draft_release:
    name: "Draft Release"
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: [style, tests, docs, examples, retro_222, retro_221, gate, pydpf-post_231, pydpf-post_222, pydpf-post_221, docker_tests]
    runs-on: ubuntu-latest
    steps:
      - name: "Set up Python"
        uses: actions/setup-python@v4.6.0
        with:
          python-version: 3.9

      - name: "Download artifacts"
        uses: actions/download-artifact@v3

      - name: "Display downloaded files"
        run: ls -R

      - name: "Create draft release"
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./**/*.whl
            ./**/*.tar.gz
            ./**/*.zip
          draft: true
          generate_release_notes: true

#      - name: "Upload to Test PyPi"  # Change TOKEN
#        run: |
#          pip install twine
#          twine upload --repository testpypi --skip-existing ./**/*.whl
#          twine upload --repository testpypi --skip-existing ./**/*.tar.gz
#        env:
#          TWINE_USERNAME: __token__
#          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
