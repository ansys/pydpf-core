name: Release

on:
  release:
    types: [published]

jobs:
  Deploy_Documentation:
    name: "Deploy live documentation"
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: "Get the version"
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: "Download Release Asset - HTML"
        uses: dsaltares/fetch-gh-release-asset@1.0.0
        with:
          file: HTML-doc-ansys-dpf-core.zip
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: "Unzip the HMTL documentation"
        uses: montudor/action-zip@v1
        with:
          args: unzip -qq HTML-doc-ansys-dpf-core.zip -d HTML-doc-ansys-dpf-core

      - name: "Deploy to gh-pages"
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: HTML-doc-ansys-dpf-core/
          token: ${{secrets.PYANSYS_CI_BOT_TOKEN}}
          branch: gh-pages
          git-config-name: pyansys-ci-bot
          git-config-email: pyansys.github.bot@ansys.com
          repository-name: pyansys/DPF-Core-docs
          commit-message: Documentation generated for ${{ steps.get_version.outputs.VERSION }}
          clean-exclude: "CNAME"
          tag: doc-${{ steps.get_version.outputs.VERSION }}

  Publish_to_PyPi:
    name: Publish to PyPi
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3

      - name: "Download Release Asset - HTML"
        uses: dsaltares/fetch-gh-release-asset@1.0.0
        with:
          file: ansys_dpf_core-0.6.0-py3-none-any.whl
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: "Upload to Public PyPi"
        run: |
          pip install twine
          twine upload ansys_dpf_core-0.6.0-py3-none-any.whl
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}