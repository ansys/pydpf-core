name: Release

on:
  release:
    types: [published]

jobs:
  Deploy_Documentation:
    name: "Deploy live documentation"
    runs-on: ubuntu-latest
    steps:
      - name: "Deploy to gh-pages"
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: docs/build/html
          token: ${{secrets.PYANSYS_CI_BOT_TOKEN}}
          branch: gh-pages
          git-config-name: pyansys-ci-bot
          git-config-email: pyansys.github.bot@ansys.com
          repository-name: pyansys/DPF-Core-docs
          commit-message: Documentation generated for ${{ env.RELEASE }}
          clean-exclude: "CNAME"
          tag: ${{ env.RELEASE }}

  Publish_to_PyPi:
    name: Publish to PyPi
    runs-on: ubuntu-latest
    steps:
      - name: Download Release Asset - whl
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: tags/${{ env.RELEASE }}
          file: '*.whl'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Release Asset - tar.gz
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: tags/${{ env.RELEASE }}
          file: '*.tar.gz'
          token: ${{ secrets.GITHUB_TOKEN }}

#      - name: "Upload to Public PyPi"
#        run: |
#          pip install twine
#          twine upload --skip-existing ./**/*.whl
#          twine upload --skip-existing ./**/*.tar.gz
#        env:
#          TWINE_USERNAME: __token__
#          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

      - name: "Upload to Test PyPi"
        run: |
          pip install twine
          twine upload --repository testpypi --skip-existing ./**/*.whl
          twine upload --repository testpypi --skip-existing ./**/*.tar.gz
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}