
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\00-basic\04-basic-load-file.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_00-basic_04-basic-load-file.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_00-basic_04-basic-load-file.py:


.. _ref_basic_load_file_example:

Write/Load and Upload/Download a Result File
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
DPF-Core can upload files to and download files from the server machine.

This example shows how to write and upload files on the server machine and then
download them back on the client side. The resulting fields container is exported
in CSV format.

.. GENERATED FROM PYTHON SOURCE LINES 14-16

Load a model from the DPF-Core examples:
``ansys.dpf.core`` module.

.. GENERATED FROM PYTHON SOURCE LINES 16-23

.. code-block:: default


    from ansys.dpf import core
    from ansys.dpf.core import examples

    model = core.Model(examples.simple_bar)
    mesh = model.metadata.meshed_region



.. rst-class:: sphx-glr-script-out

.. code-block:: pytb

    Traceback (most recent call last):
      File "D:\PyAnsysRepo\pydpf-core\examples\00-basic\04-basic-load-file.py", line 21, in <module>
        mesh = model.metadata.meshed_region
      File "d:\pyansysrepo\pydpf-core\ansys\dpf\core\model.py", line 104, in metadata
        self._metadata = Metadata(self._data_sources, self._server)
      File "d:\pyansysrepo\pydpf-core\ansys\dpf\core\model.py", line 258, in __init__
        self._set_data_sources(data_sources)
      File "d:\pyansysrepo\pydpf-core\ansys\dpf\core\model.py", line 394, in _set_data_sources
        self._cache_streams_provider()
      File "d:\pyansysrepo\pydpf-core\ansys\dpf\core\model.py", line 282, in _cache_streams_provider
        self._stream_provider.inputs.connect(self._data_sources)
    AttributeError: 'NoneType' object has no attribute 'connect'




.. GENERATED FROM PYTHON SOURCE LINES 24-27

Get and Plot the Fields Container for the Result
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Get the fields container for the result and plot it so you can compare it later:

.. GENERATED FROM PYTHON SOURCE LINES 27-32

.. code-block:: default


    displacement_operator = model.results.displacement()
    fc_out = displacement_operator.outputs.fields_container()
    mesh.plot(fc_out)


.. GENERATED FROM PYTHON SOURCE LINES 33-36

Export Result
~~~~~~~~~~~~~
Get the fields container for the result and export it in the CSV format:

.. GENERATED FROM PYTHON SOURCE LINES 36-46

.. code-block:: default


    import os

    file_path = os.getcwd() + "\\simple_bar_fc.csv"

    export_csv_operator = core.operators.serialization.field_to_csv()
    export_csv_operator.inputs.field_or_fields_container.connect(fc_out)
    export_csv_operator.inputs.file_path.connect(file_path)
    export_csv_operator.run()


.. GENERATED FROM PYTHON SOURCE LINES 47-54

Upload CSV Result File
~~~~~~~~~~~~~~~~~~~~~~~
Upload the file ``simple_bar_fc.csv`` on the server side.
Here, :func:`upload_file_in_tmp_folder` is used because
it is assumed that the server machine architecture is unknown.
However, when the server file path is known, :func:`upload_file`
can be used.

.. GENERATED FROM PYTHON SOURCE LINES 54-61

.. code-block:: default


    server_file_path = core.upload_file_in_tmp_folder(file_path)
    print(server_file_path)

    # Remove file to avoid polluting.
    os.remove(file_path)


.. GENERATED FROM PYTHON SOURCE LINES 62-65

Download CSV Result File
~~~~~~~~~~~~~~~~~~~~~~~~~
Download the file ``simple_bar_fc.csv``:

.. GENERATED FROM PYTHON SOURCE LINES 65-69

.. code-block:: default


    downloaded_client_file_path = os.getcwd() + "\\simple_bar_fc_downloaded.csv"
    core.download_file(server_file_path, downloaded_client_file_path)


.. GENERATED FROM PYTHON SOURCE LINES 70-73

Load CSV Result File as Operator Input
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Load the fields container contained in the CSV file as an operator input:

.. GENERATED FROM PYTHON SOURCE LINES 73-83

.. code-block:: default


    my_data_sources = core.DataSources(downloaded_client_file_path)
    import_csv_operator = core.operators.serialization.csv_to_field()
    import_csv_operator.inputs.data_sources.connect(my_data_sources)
    downloaded_fc_out = import_csv_operator.outputs.fields_container()
    mesh.plot(downloaded_fc_out)

    # Remove file to avoid polluting.
    os.remove(downloaded_client_file_path)


.. GENERATED FROM PYTHON SOURCE LINES 84-87

Make Operations Over the Imported Fields Container
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Use this fields container:

.. GENERATED FROM PYTHON SOURCE LINES 87-92

.. code-block:: default


    min_max_op = core.operators.min_max.min_max_fc()
    min_max_op.inputs.fields_container.connect(downloaded_fc_out)
    min_field = min_max_op.outputs.field_min()
    min_field.data


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_examples_00-basic_04-basic-load-file.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: 04-basic-load-file.py <04-basic-load-file.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: 04-basic-load-file.ipynb <04-basic-load-file.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
