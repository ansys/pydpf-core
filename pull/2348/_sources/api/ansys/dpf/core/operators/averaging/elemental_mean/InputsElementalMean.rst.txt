





:class:`InputsElementalMean`
============================


.. py:class:: ansys.dpf.core.operators.averaging.elemental_mean.InputsElementalMean(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   elemental_mean operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.averaging.elemental_mean()
   >>> my_field = dpf.Field()
   >>> op.inputs.field.connect(my_field)
   >>> my_collapse_shell_layers = bool()
   >>> op.inputs.collapse_shell_layers.connect(my_collapse_shell_layers)
   >>> my_force_averaging = bool()
   >>> op.inputs.force_averaging.connect(my_force_averaging)
   >>> my_scoping = dpf.Scoping()
   >>> op.inputs.scoping.connect(my_scoping)






.. py:currentmodule:: InputsElementalMean

Overview
--------

.. tab-set::



   .. tab-item:: Methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~connect`
            - Connect any input (an entity or an operator output) to any input pin of this operator.


   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~field`
            - Allows to connect field input to the operator.
          * - :py:attr:`~collapse_shell_layers`
            - Allows to connect collapse_shell_layers input to the operator.
          * - :py:attr:`~force_averaging`
            - Allows to connect force_averaging input to the operator.
          * - :py:attr:`~scoping`
            - Allows to connect scoping input to the operator.




   .. tab-item:: Special methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~__str__`
            - 
          * - :py:attr:`~__call__`
            - 
          * - :py:attr:`~__getitem__`
            - 




Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.averaging.elemental_mean import InputsElementalMean

Property detail
---------------

.. py:property:: field
   :type: ansys.dpf.core.inputs.Input


   Allows to connect field input to the operator.

   :returns: An Input instance for this pin.
   :rtype: input

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.averaging.elemental_mean()
   >>> op.inputs.field.connect(my_field)
   >>> # or
   >>> op.inputs.field(my_field)

.. py:property:: collapse_shell_layers
   :type: ansys.dpf.core.inputs.Input


   Allows to connect collapse_shell_layers input to the operator.

   If true, shell layers are averaged as well (default is false).

   :returns: An Input instance for this pin.
   :rtype: input

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.averaging.elemental_mean()
   >>> op.inputs.collapse_shell_layers.connect(my_collapse_shell_layers)
   >>> # or
   >>> op.inputs.collapse_shell_layers(my_collapse_shell_layers)

.. py:property:: force_averaging
   :type: ansys.dpf.core.inputs.Input


   Allows to connect force_averaging input to the operator.

   If true you average, if false you just sum.

   :returns: An Input instance for this pin.
   :rtype: input

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.averaging.elemental_mean()
   >>> op.inputs.force_averaging.connect(my_force_averaging)
   >>> # or
   >>> op.inputs.force_averaging(my_force_averaging)

.. py:property:: scoping
   :type: ansys.dpf.core.inputs.Input


   Allows to connect scoping input to the operator.

   Average only on these elements. If it is a scoping container, the label must correspond to the one of the fields containers.

   :returns: An Input instance for this pin.
   :rtype: input

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.averaging.elemental_mean()
   >>> op.inputs.scoping.connect(my_scoping)
   >>> # or
   >>> op.inputs.scoping(my_scoping)




Method detail
-------------

.. py:method:: __str__()

.. py:method:: connect(inpt)

   Connect any input (an entity or an operator output) to any input pin of this operator.

   Searches for the input type corresponding to the output.

   .. deprecated::
       Deprecated in favor of explicit output-to-input connections.

   :param inpt:
   :type inpt: str, int, double, bool, list[int], list[float], Field, FieldsContainer, Scoping, Enum,
   :param ScopingsContainer: Input of the operator.
   :type ScopingsContainer: E501
   :param MeshedRegion: Input of the operator.
   :type MeshedRegion: E501
   :param MeshesContainer: Input of the operator.
   :type MeshesContainer: E501
   :param DataSources: Input of the operator.
   :type DataSources: E501
   :param CyclicSupport: Input of the operator.
   :type CyclicSupport: E501
   :param Outputs: Input of the operator.
   :type Outputs: E501
   :param os.PathLike  # noqa: Input of the operator.
   :type os.PathLike  # noqa: E501


.. py:method:: __call__(inpt)

.. py:method:: __getitem__(item) -> Input




