





:class:`OutputsElementTypesProvider`
====================================


.. py:class:: ansys.dpf.core.operators.metadata.element_types_provider.OutputsElementTypesProvider(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.outputs._Outputs`


   Intermediate class used to get outputs from
   element_types_provider operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.metadata.element_types_provider()
   >>> # Connect inputs : op.inputs. ...
   >>> result_element_types_data = op.outputs.element_types_data()





.. py:currentmodule:: OutputsElementTypesProvider

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~element_types_data`
            - Allows to get element_types_data output of the operator




   .. tab-item:: Special methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~__getitem__`
            - 
          * - :py:attr:`~__str__`
            - 




Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.metadata.element_types_provider import OutputsElementTypesProvider

Property detail
---------------

.. py:property:: element_types_data
   :type: ansys.dpf.core.outputs.Output


   Allows to get element_types_data output of the operator

   The generic_data_container has a class_name: ElementTypesProperties. It contains the following property fields: element_routine_number: Element routine number. E.g 186 for SOLID186, keyopts: Element type option keys, kdofs: DOF/node for this element type.This is a bit mapping, nodelm: Number of nodes for this element type, nodfor: Number of nodes per element having nodal forces, nodstr: Number of nodes per element having nodal stresses, new_gen_element: Element of new generation.

   :returns: An Output instance for this pin.
   :rtype: output

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.metadata.element_types_provider()
   >>> # Get the output from op.outputs. ...
   >>> result_element_types_data = op.outputs.element_types_data()




Method detail
-------------

.. py:method:: __getitem__(index) -> Output

.. py:method:: __str__()




