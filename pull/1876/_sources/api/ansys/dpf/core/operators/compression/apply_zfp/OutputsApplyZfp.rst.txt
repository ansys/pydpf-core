





:class:`OutputsApplyZfp`
========================


.. py:class:: ansys.dpf.core.operators.compression.apply_zfp.OutputsApplyZfp(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.outputs._Outputs`


   Intermediate class used to get outputs from
   apply_zfp operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.compression.apply_zfp()
   >>> # Connect inputs : op.inputs. ...
   >>> result_compress_speed = op.outputs.compress_speed()
   >>> result_compress_ratio = op.outputs.compress_ratio()
   >>> result_dataOut = op.outputs.dataOut()





.. py:currentmodule:: OutputsApplyZfp

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~compress_speed`
            - Allows to get compress_speed output of the operator
          * - :py:attr:`~compress_ratio`
            - Allows to get compress_ratio output of the operator
          * - :py:attr:`~dataOut`
            - Allows to get dataOut output of the operator




   .. tab-item:: Special methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~__getitem__`
            - 
          * - :py:attr:`~__str__`
            - 




Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.compression.apply_zfp import OutputsApplyZfp

Property detail
---------------

.. py:property:: compress_speed
   :type: ansys.dpf.core.outputs.Output


   Allows to get compress_speed output of the operator

   the output entity is a double, containing compression speed of the input data: for ElementalNodal location - [elements/sec], for Nodal location - [nodes/sec]

   :returns: An Output instance for this pin.
   :rtype: output

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.compression.apply_zfp()
   >>> # Get the output from op.outputs. ...
   >>> result_compress_speed = op.outputs.compress_speed()

.. py:property:: compress_ratio
   :type: ansys.dpf.core.outputs.Output


   Allows to get compress_ratio output of the operator

   the output entity is a double, containing compression rate = initial/compressed

   :returns: An Output instance for this pin.
   :rtype: output

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.compression.apply_zfp()
   >>> # Get the output from op.outputs. ...
   >>> result_compress_ratio = op.outputs.compress_ratio()

.. py:property:: dataOut
   :type: ansys.dpf.core.outputs.Output


   Allows to get dataOut output of the operator

   the output entity is a 'custom type field container';                     each output field containing compressed results corresponding to one component data (ie. input vector field/fc contains 3 components will give 3 output fields), this is not the case when input pin3 is set to 3, all components will be compressed into one field.

   :returns: An Output instance for this pin.
   :rtype: output

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.compression.apply_zfp()
   >>> # Get the output from op.outputs. ...
   >>> result_dataOut = op.outputs.dataOut()




Method detail
-------------

.. py:method:: __getitem__(index) -> Output

.. py:method:: __str__()




