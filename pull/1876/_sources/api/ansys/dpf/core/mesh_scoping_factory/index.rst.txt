





The ``mesh_scoping_factory.py`` module
======================================

.. py:module:: ansys.dpf.core.mesh_scoping_factory


Summary
-------








.. py:currentmodule:: mesh_scoping_factory
.. tab-set::







    .. tab-item:: Functions

        .. list-table::
          :header-rows: 0
          :widths: auto


          * - :py:obj:`~nodal_scoping`
            - Create a nodal :class:`ansys.dpf.core.Scoping` defining a list of node IDs.


          * - :py:obj:`~elemental_scoping`
            - Create an elemental :class:`ansys.dpf.core.Scoping` defining a list of element IDs.


          * - :py:obj:`~face_scoping`
            - Create a face :class:`ansys.dpf.core.Scoping`defining a list of face IDs.


          * - :py:obj:`~named_selection_scoping`
            - Create a :class:`ansys.dpf.core.Scoping` based on a named selection in a model.

















Description
-----------

mesh_scoping_factory.

Contains functions to simplify creating a mesh scoping.







Module detail
-------------

.. py:function:: nodal_scoping(node_ids: ansys.dpf.core.scoping.IdVectorType, server: ansys.dpf.core.server_types.AnyServerType = None) -> ansys.dpf.core.Scoping

   Create a nodal :class:`ansys.dpf.core.Scoping` defining a list of node IDs.

   :param node_ids: List of node IDs.
   :param server: Server with the channel connected to the remote or local instance.
                  The default is ``None``, in which case an attempt is made to use the
                  global server.

   :returns: A nodal scoping containing the node IDs provided.
   :rtype: scoping


.. py:function:: elemental_scoping(element_ids: ansys.dpf.core.scoping.IdVectorType, server: ansys.dpf.core.server_types.AnyServerType = None) -> ansys.dpf.core.Scoping

   Create an elemental :class:`ansys.dpf.core.Scoping` defining a list of element IDs.

   :param element_ids: List of element IDs.
   :param server: Server with the channel connected to the remote or local instance.
                  The default is ``None``, in which case an attempt is made to use the
                  global server.

   :returns: An elemental scoping containing the element IDs provided.
   :rtype: scoping


.. py:function:: face_scoping(face_ids: ansys.dpf.core.scoping.IdVectorType, server: ansys.dpf.core.server_types.AnyServerType = None) -> ansys.dpf.core.Scoping

   Create a face :class:`ansys.dpf.core.Scoping`defining a list of face IDs.

   :param face_ids: List of face IDs.
   :param server: Server with the channel connected to the remote or local instance.
                  The default is ``None``, in which case an attempt is made to use the
                  global server.

   :returns: A face scoping containing the face IDs provided.
   :rtype: scoping


.. py:function:: named_selection_scoping(named_selection_name: str, model: ansys.dpf.core.model.Model, server: ansys.dpf.core.server_types.AnyServerType = None) -> ansys.dpf.core.Scoping

   Create a :class:`ansys.dpf.core.Scoping` based on a named selection in a model.

   :param named_selection_name: Name of the named selection.
   :param model: Model where the named selection exists.

   :returns: A scoping containing the IDs of the entities in the named selection.
             The location depends on the type of entities targeted by the named selection.
   :rtype: scoping




