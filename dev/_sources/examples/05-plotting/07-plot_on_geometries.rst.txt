
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\05-plotting\07-plot_on_geometries.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_05-plotting_07-plot_on_geometries.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_05-plotting_07-plot_on_geometries.py:


.. _plot_on_geometries:

Plot on geometry elements
~~~~~~~~~~~~~~~~~~~~~~~~~
This example shows how to plot a certain field in different geometric
objects such as points, lines and planes.

.. note::
    This example requires the Premium ServerContext.
    For more information, see :ref:`user_guide_server_context`.

.. GENERATED FROM PYTHON SOURCE LINES 17-20

Imports and load model
~~~~~~~~~~~~~~~~~~~~~~
Import modules and set context as Premium.

.. GENERATED FROM PYTHON SOURCE LINES 20-33

.. code-block:: default


    import numpy as np
    import matplotlib.pyplot as plt

    from ansys.dpf import core as dpf
    from ansys.dpf.core import examples
    from ansys.dpf.core import operators as ops
    from ansys.dpf.core.geometry import Line, Plane, Points
    from ansys.dpf.core.plotter import DpfPlotter
    from ansys.dpf.core.fields_factory import field_from_array

    dpf.set_default_server_context(dpf.AvailableServerContexts.premium)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

Load model from examples and print information:

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    model = dpf.Model(examples.find_static_rst())
    print(model)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    DPF Model
    ------------------------------
    Static analysis
    Unit system: MKS: m, kg, N, s, V, A, degC
    Physics Type: Mechanical
    Available results:
         -  displacement: Nodal Displacement
         -  reaction_force: Nodal Force   
         -  stress: ElementalNodal Stress 
         -  elemental_volume: Elemental Volume
         -  stiffness_matrix_energy: Elemental Energy-stiffness matrix
         -  artificial_hourglass_energy: Elemental Hourglass Energy
         -  thermal_dissipation_energy: Elemental thermal dissipation energy
         -  kinetic_energy: Elemental Kinetic Energy
         -  co_energy: Elemental co-energy
         -  incremental_energy: Elemental incremental energy
         -  elastic_strain: ElementalNodal Strain
         -  structural_temperature: ElementalNodal Temperature
    ------------------------------
    DPF  Meshed Region: 
      81 nodes 
      8 elements 
      Unit: m 
      With solid (3D) elements
    ------------------------------
    DPF  Time/Freq Support: 
      Number of sets: 1 
    Cumulative     Time (s)       LoadStep       Substep         
    1              1.000000       1              1               





.. GENERATED FROM PYTHON SOURCE LINES 39-42

Create points, line and plane objects
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create 8 points in the corners and one in the middle:

.. GENERATED FROM PYTHON SOURCE LINES 42-56

.. code-block:: default

    points = Points(
        [
            [0.0, 0.03, 0.0],
            [0.0, 0.03, 0.03],
            [0.0, 0.06, 0.00],
            [0.0, 0.06, 0.03],
            [0.03, 0.03, 0.0],
            [0.03, 0.03, 0.03],
            [0.03, 0.06, 0.00],
            [0.03, 0.06, 0.03],
            [0.015, 0.045, 0.015],
        ]
    )








.. GENERATED FROM PYTHON SOURCE LINES 57-58

Create line passing through the geometry's diagional:

.. GENERATED FROM PYTHON SOURCE LINES 58-60

.. code-block:: default

    line = Line([[0.03, 0.03, 0.05], [0.0, 0.06, 0.0]], n_points=50)








.. GENERATED FROM PYTHON SOURCE LINES 61-62

Create vertical plane passing through the mid point:

.. GENERATED FROM PYTHON SOURCE LINES 62-71

.. code-block:: default

    plane = Plane(
        [0.015, 0.045, 0.015],
        [1, 1, 0],
        width=0.03,
        height=0.03,
        n_cells_x=10,
        n_cells_y=10,
    )








.. GENERATED FROM PYTHON SOURCE LINES 72-75

Map displacement field to geometry objects
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Get displacement field and model's mesh:

.. GENERATED FROM PYTHON SOURCE LINES 75-78

.. code-block:: default

    disp = model.results.displacement
    mesh = model.metadata.meshed_region








.. GENERATED FROM PYTHON SOURCE LINES 79-80

Map displacement to points in Points object:

.. GENERATED FROM PYTHON SOURCE LINES 80-89

.. code-block:: default

    mapping_operator = ops.mapping.on_coordinates(
        fields_container=disp,
        coordinates=field_from_array(points.coordinates.data),
        create_support=True,
        mesh=mesh,
    )
    fields_mapped = mapping_operator.outputs.fields_container()
    field_points = fields_mapped[0]








.. GENERATED FROM PYTHON SOURCE LINES 90-91

Map displacement to points in Line object:

.. GENERATED FROM PYTHON SOURCE LINES 91-100

.. code-block:: default

    mapping_operator = ops.mapping.on_coordinates(
        fields_container=disp,
        coordinates=line.mesh.nodes.coordinates_field,
        create_support=True,
        mesh=mesh,
    )
    fields_mapped = mapping_operator.outputs.fields_container()
    field_line = fields_mapped[0]








.. GENERATED FROM PYTHON SOURCE LINES 101-102

Map displacement to points in Plane object:

.. GENERATED FROM PYTHON SOURCE LINES 102-111

.. code-block:: default

    mapping_operator = ops.mapping.on_coordinates(
        fields_container=disp,
        coordinates=plane.mesh.nodes.coordinates_field,
        create_support=True,
        mesh=mesh,
    )
    fields_mapped = mapping_operator.outputs.fields_container()
    field_plane = fields_mapped[0]








.. GENERATED FROM PYTHON SOURCE LINES 112-115

Plotting displacement field
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Define camera position (obtained with ``cpos=pl.show_figure(return_cpos=True)``):

.. GENERATED FROM PYTHON SOURCE LINES 115-120

.. code-block:: default

    cpos = [
        (0.07635352356975698, 0.1200500294271993, 0.041072502929096165),
        (0.015, 0.045, 0.015),
        (-0.16771051558419411, -0.1983722658245161, 0.9656715938216944),
    ]







.. GENERATED FROM PYTHON SOURCE LINES 121-122

3D plot of Points and display mesh:

.. GENERATED FROM PYTHON SOURCE LINES 122-127

.. code-block:: default

    pl = DpfPlotter()
    pl.add_field(field_points, render_points_as_spheres=True, point_size=10)
    pl.add_mesh(mesh, style="surface", show_edges=True, color="w", opacity=0.3)
    pl.show_figure(show_axes=True, cpos=cpos)




.. image-sg:: /examples/05-plotting/images/sphx_glr_07-plot_on_geometries_001.png
   :alt: 07 plot on geometries
   :srcset: /examples/05-plotting/images/sphx_glr_07-plot_on_geometries_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 128-130

3D plot of Line and mesh.
Note that the line is only displayed if some points are found inside the mesh:

.. GENERATED FROM PYTHON SOURCE LINES 130-136

.. code-block:: default

    pl = DpfPlotter()
    if not len(field_line) == 0:
        pl.add_field(field_line, line.mesh, line_width=5)
    pl.add_mesh(mesh, style="surface", show_edges=True, color="w", opacity=0.3)
    pl.show_figure(show_axes=True, cpos=cpos)




.. image-sg:: /examples/05-plotting/images/sphx_glr_07-plot_on_geometries_002.png
   :alt: 07 plot on geometries
   :srcset: /examples/05-plotting/images/sphx_glr_07-plot_on_geometries_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 137-139

Plot Plane and display mesh in background.
Note that the plane is only displayed if some points are found inside the mesh:

.. GENERATED FROM PYTHON SOURCE LINES 139-145

.. code-block:: default

    pl = DpfPlotter()
    if not len(field_plane) == 0:
        pl.add_field(field_plane, plane.mesh, show_edges=False)
    pl.add_mesh(mesh, style="surface", show_edges=True, color="w", opacity=0.3)
    pl.show_figure(show_axes=True, cpos=cpos)




.. image-sg:: /examples/05-plotting/images/sphx_glr_07-plot_on_geometries_003.png
   :alt: 07 plot on geometries
   :srcset: /examples/05-plotting/images/sphx_glr_07-plot_on_geometries_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 146-147

2D plot (graph) of Line (line length vs displacement field):

.. GENERATED FROM PYTHON SOURCE LINES 147-153

.. code-block:: default

    norm_disp = [np.linalg.norm(field_line.data[i]) for i in range(len(field_line.data))]
    path = line.path[field_line.scoping.ids - 1]
    plt.plot(path, norm_disp)
    plt.xlabel("Line length")
    plt.ylabel("Displacement norm field")
    plt.show()



.. image-sg:: /examples/05-plotting/images/sphx_glr_07-plot_on_geometries_004.png
   :alt: 07 plot on geometries
   :srcset: /examples/05-plotting/images/sphx_glr_07-plot_on_geometries_004.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  4.049 seconds)


.. _sphx_glr_download_examples_05-plotting_07-plot_on_geometries.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 07-plot_on_geometries.py <07-plot_on_geometries.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 07-plot_on_geometries.ipynb <07-plot_on_geometries.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
